#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 1130 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"Description: Assignment 2 Part A"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 73
(4
 #"This code is provided solely for the personal and private use of stu"
 #"dents"
) 0 0 17 29 1 #"\n"
0 0 17 3 75
(5
 #"taking the CSC324 course at the University of Toronto. Copying for p"
 #"urposes"
) 0 0 17 29 1 #"\n"
0 0 17 3 55 #"other than this use is expressly prohibited. All forms "
0 0 17 3 18 #"of distribution of"
0 0 17 29 1 #"\n"
0 0 17 3 70
(6
 #"this code, including but not limited to public repositories on GitHu"
 #"b,"
) 0 0 17 29 1 #"\n"
0 0 17 3 73
(7
 #"GitLab, Bitbucket, or any other online platform, whether as given or"
 #" with"
) 0 0 17 29 1 #"\n"
0 0 17 3 38 #"any changes, are expressly prohibited."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"Copyright: (c) University of Toronto"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 55 #"CSC324 Principles of Programming Languages, Summer 2020"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"provide"
0 0 25 3 1 #" "
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 10 #"norm-mixin"
0 0 25 3 1 #" "
0 0 14 3 15 #"to-string-mixin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 25 3 1 #" "
0 0 14 3 8 #"my-class"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 25 3 2 #" ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 4 #"with"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 7 #"<cname>"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<margs>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 7 #"<mbody>"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"<cname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" (["
0 0 14 3 9 #"__class__"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-immutable-hash"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"quote"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mname>"
0 0 25 3 3 #") ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 7 #"<margs>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 2 #") "
0 0 14 3 7 #"<mbody>"
0 0 25 3 3 #")) "
0 0 14 3 3 #"..."
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 8 #"__dict__"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-immutable-hash"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"quote"
0 0 25 3 1 #" "
0 0 14 3 7 #"<field>"
0 0 25 3 2 #") "
0 0 14 3 7 #"<field>"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 4 #"self"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 13 #"create-object"
0 0 25 3 1 #" "
0 0 14 3 7 #"<cname>"
0 0 25 3 1 #" "
0 0 14 3 9 #"__class__"
0 0 25 3 1 #" "
0 0 14 3 8 #"__dict__"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 4 #"self"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 7 #"<cname>"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"with"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<margs>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 7 #"<mbody>"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 7 #"<cname>"
0 0 25 3 2 #" ("
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 3 #") ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<margs>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 7 #"<mbody>"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 7 #"<cname>"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"with"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mixin>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<margs>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 7 #"<mbody>"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"<cname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 2 #" ("
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 3 #") ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 7 #"<mname>"
0 0 25 3 1 #" "
0 0 14 3 7 #"<margs>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 1 #" "
0 0 14 3 7 #"<mbody>"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 25 3 4 #") (("
0 0 14 3 7 #"<mixin>"
0 0 25 3 2 #" ("
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 14 3 7 #"<field>"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 3 #")) "
0 0 14 3 3 #"arg"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              )"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       )"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"create-object"
0 0 25 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 25 3 1 #" "
0 0 14 3 13 #"class__dict__"
0 0 25 3 1 #" "
0 0 14 3 12 #"self__dict__"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" (["
0 0 14 3 4 #"self"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"msg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"__setattr__"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"key"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 13 #"create-object"
0 0 25 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 14 3 13 #"class__dict__"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 8 #"hash-set"
0 0 25 3 1 #" "
0 0 14 3 12 #"self__dict__"
0 0 25 3 1 #" "
0 0 14 3 3 #"key"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"_fields"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 23 #"helper-sort-turn-symbol"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 4 #"sort"
0 0 25 3 2 #" ("
0 0 14 3 11 #"turn-string"
0 0 25 3 2 #" ("
0 0 14 3 9 #"hash-keys"
0 0 25 3 1 #" "
0 0 14 3 12 #"self__dict__"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 14 3 8 #"string<?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 14 3 12 #"self__dict__"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"_methods"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 11 #"helper-sort"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 25 3 2 #" ("
0 0 14 3 9 #"hash-keys"
0 0 25 3 1 #" "
0 0 14 3 13 #"class__dict__"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 14 3 8 #"string<?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                              "
0 0 14 3 13 #"class__dict__"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 13 #"hash-has-key?"
0 0 25 3 1 #" "
0 0 14 3 12 #"self__dict__"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 8 #"hash-ref"
0 0 25 3 1 #" "
0 0 14 3 12 #"self__dict__"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 13 #"hash-has-key?"
0 0 25 3 1 #" "
0 0 14 3 13 #"class__dict__"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 2 #"\316\273"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 25 3 1 #" "
0 0 14 3 13 #"class__dict__"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 5 #"error"
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 16 #"\"Unknown msg ~a\""
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 6 #")]))])"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 14 3 4 #"self"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";; Test"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"my-class"
0 0 25 3 1 #" "
0 0 14 3 6 #"Vector"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 6 #"method"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #" "
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 14 3 5 #"other"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Vector"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"other"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 42 #"                                         ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 5 #"other"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         307 22           0 0           0 50 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"v1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Vector"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"v2"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Vector"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"v3"
0 0 25 3 3 #" (("
0 0 14 3 2 #"v1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"add"
0 0 25 3 2 #") "
0 0 14 3 2 #"v2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 2 #"v3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 2 #"v3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 79
(8
 #";Implement norm-mixin, which consumes a function f from Vector -> nu"
 #"mber and an"
) 0 0 25 29 1 #"\n"
0 0 17 3 89
(9
 #";instance of a Vector, and returns a vector identical to v but where"
 #" ((v 'norm)) = (f v)."
) 0 0 25 29 1 #"\n"
0 0 17 3 82
(10
 #";If the vector already has an norm method attached to it, it should "
 #"be overridden."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; The L1 norm"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Vector -> number"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"L1"
0 0 25 3 1 #" "
0 0 14 3 4 #"self"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; The L2 norm"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Vector -> number"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"L2"
0 0 25 3 1 #" "
0 0 14 3 4 #"self"
0 0 25 3 3 #") ("
0 0 14 3 4 #"sqrt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; The L\342\210\236 norm:"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Vector -> number"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Linf"
0 0 25 3 1 #" "
0 0 14 3 4 #"self"
0 0 25 3 3 #") ("
0 0 14 3 3 #"max"
0 0 25 3 2 #" ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"self"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #"; (Vector -> number) -> Vector -> Vector"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"norm-mixin"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  (("
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"__setattr__"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"norm"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 5 #" () ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";(((("
0 0 17 3 5 #"curry"
0 0 17 3 1 #" "
0 0 17 3 10 #"norm-mixin"
0 0 17 3 1 #" "
0 0 17 3 2 #"L1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"Vector"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 10 #")) 'norm))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";; Test"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; (define v1 (Vector 5 12))"
0 0 25 29 1 #"\n"
0 0 17 3 32 #"; (define v2 (norm-mixin L1 v1))"
0 0 25 29 1 #"\n"
0 0 17 3 32 #"; (define v3 (norm-mixin L2 v1))"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; ((v2 'norm))"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; ((v3 'norm))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";;; Question 2:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 81
(11
 #"; In this question, please extend the my-class macro to support obje"
 #"cts receiving"
) 0 0 25 29 1 #"\n"
0 0 17 3 54 #"; '_fields and '_methods, as described in the handout."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 78
(12
 #"; (work is done in the `my-class` macro above, but use this space fo"
 #"r notes or"
) 0 0 25 29 1 #"\n"
0 0 17 3 39 #"; writing your own tests, if you like.)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"helper-sort"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 4 #"dict"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 25 3 1 #"("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #") "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 25 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"dict"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"helper-sort"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #") "
0 0 14 3 4 #"dict"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 23 #"helper-sort-turn-symbol"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 4 #"dict"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 25 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 29 3 1 #"."
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 29 3 1 #","
0 0 25 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"dict"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 14 #"string->symbol"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 23 #"helper-sort-turn-symbol"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #") "
0 0 14 3 4 #"dict"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"turn-string"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 25 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 5 #"))) ("
0 0 14 3 11 #"turn-string"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; (define v1 (Vector 5 12))"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; (v1 '_methods)"
0 0 25 29 1 #"\n"
0 0 17 3 15 #"; (v1 '_fields)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";;; Question 3:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 84
(13
 #";Implement (to-string-mixin o), which consumes an object and produce"
 #"s the equivalent"
) 0 0 25 29 1 #"\n"
0 0 17 3 95
(14
 #";object in a manner similar to question 1: in particular, the produc"
 #"ed object should be able to"
) 0 0 25 29 1 #"\n"
0 0 17 3 94
(15
 #";receive a message 'to-string, and when it does, it should produce a"
 #" string containing all the"
) 0 0 25 29 1 #"\n"
0 0 17 3 80
(16
 #";fields and their values, in order by field. The format of the strin"
 #"g should be:"
) 0 0 25 29 1 #"\n"
0 0 17 3 26 #";\"(f1=v1 f2=v2 ... fn=vn)\""
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"string-converter"
0 0 25 3 1 #" "
0 0 14 3 6 #"object"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 6 #"object"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 6 #"object"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 6 #"object"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 1 #" "
0 0 14 3 6 #"object"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"string-appender"
0 0 25 3 1 #" "
0 0 14 3 11 #"string-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"appender"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"()\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 4 #")) ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #" ("
0 0 14 3 8 #"appender"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"appender"
0 0 25 3 1 #" "
0 0 14 3 11 #"string-list"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Object -> Object"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"to-string-mixin"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  (("
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"__setattr__"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 9 #"to-string"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 25 3 4 #" ()("
0 0 14 3 15 #"string-appender"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 16 #"string-converter"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 19 3 3 #"\"=\""
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 16 #"string-converter"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"_fields"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"curry"
0 0 17 3 2 #" ("
0 0 17 3 5 #"curry"
0 0 17 3 1 #" "
0 0 17 3 15 #"to-string-mixin"
0 0 17 3 2 #" ("
0 0 17 3 6 #"Vector"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 14 #")) 'to-string)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";test q4"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";; Test"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; (define v1 (Vector 5 12))"
0 0 25 29 1 #"\n"
0 0 17 3 15 #"; (v1 '_fields)"
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; (define v2 (to-string-mixin v1))"
0 0 25 29 1 #"\n"
0 0 17 3 17 #"; (v2 'to-string)"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";;; Question 4:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 83
(17
 #";In this question, you will extend our class macro to support the fo"
 #"llowing syntax:"
) 0 0 25 29 1 #"\n"
0 0 17 3 18 #";(my-class <cname>"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";          (<field> ...)"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";          (with <mixin> ...)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";          (method <mname> <margs> ... <mbody>)...)"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";per the assignment handout."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 78 12 0 0 25 29 1 #"\n"
0 0 17 3 39 #"; writing your own tests, if you like.)"
0 0 25 29 1 #"\n"
0           0
